buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:5.0.25"
    }
}

apply plugin: "java"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "maven"
apply plugin: "maven-publish"

// Define properties file
ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

repositories {
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven { // The repo from which to get NEI and stuff
        name = "ChickenBones"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "Open Computers"
        url = "http://maven.cil.li/"
    }
    maven {
        name = "jei"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "hwyla"
        url = "http://tehnut.info/maven"
    }
    maven {
        name = "curseforge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
    maven {
        name = "ComputerCraft"
        url = "https://cc.crzd.me/maven"
    }
    maven {
        name = "cofh"
        url = "http://maven.covers1624.net"
    }
    /*
    ivy {
        name "ExtraCells"
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.ec.cf}/[module]-[revision].[ext]"
    }
    */
}

dependencies {
    compile "cofh:CoFHCore:${config.minecraft.version}-${config.cofh.core}:deobf"
    compile "codechicken:NotEnoughItems:${config.minecraft.version}-${config.ccn.nei}:deobf"
    compile "codechicken:CodeChickenLib:${config.minecraft.version}-${config.ccn.lib}:deobf"
    compile "dan200.computercraft:ComputerCraft:${config.cc.version}"
    //compile "extracells:ExtraCells:${config.minecraft.version}-${config.ec.version}:api"
    //provided name: "ExtraCells", version: config.ec.version, ext: "jar", classifier: "api"
    compile "li.cil.oc:OpenComputers:MC${config.oc.mc}-${config.oc.api}:api"
    //compile "org.lwjgl:lwjgl:${lwjgl.version}"
    compile "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}"
}

group = "minechem"
archivesBaseName = "Minechem"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    mappings = config.forge.mappings
    runDir = "run"
    makeObfSourceJar = false

    replace "@MAJOR@", config.mod.version.major
    replace "@MINOR@", config.mod.version.minor

    if (System.getenv("BUILD_NUMBER") != null) {
        replace "@BUILD@", System.getenv("BUILD_NUMBER")
    } else {
        replace "@BUILD@", "ManuallyBuilt"
    }
}

processResources {
    from "build.properties"
}

allprojects {
    version = "${config.minecraft.version}-${config.mod.version.major}.${config.mod.version.minor}"

    if (System.getenv("BUILD_NUMBER") != null) {
        version += ".${System.getenv("BUILD_NUMBER")}"
    } else {
        version += "-ManuallyBuilt"
    }

    jar {
        manifest {
            attributes "FMLCorePlugin": "minechem.asm.LoadingPlugin"
            attributes "FMLCorePluginContainsFMLMod": "true"
        }
        destinationDir = file(rootProject.getRootDir().getPath() + "/output")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url = "file://var/www/maven"
            }
        }
    }
}

sourceSets {
    main {
        resources {
            exclude "**/xcf/*"
            exclude "resources/assets/minechem/xcf"
        }
        java {
            srcDir "src/fontbox/src/main/java"
        }
    }
}

task apiZip(type: Zip) {
    classifier = "api"
    from sourceSets*.allSource
    include "minechem/api/**"
    destinationDir = file "output"
}

build.dependsOn "apiZip"
